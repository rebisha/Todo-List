{"version":3,"sources":["redux/store.js","redux/commonReducer.js","components/Todo/addTodo.js","components/CounterButton/counterButton.js","components/Multiselect/multiSelect.js","components/StopWatch/stopWatch.js","components/Todo/todo.js","util/index.js","components/IphoneSearch/resultFound.js","components/IphoneSearch/resultNotFound.js","components/IphoneSearch/search.js","components/MonsterCard/monsterCard.js","components/MonsterCard/monsterSearch.js","App.js","redux/action.js","serviceWorker.js","index.js"],"names":["createStore","state","action","type","ready","payload","compose","window","__REDUX_DEVTOOLS_EXTENSION__","AddTodo","props","handleChange","e","incrementCount","setState","content","target","value","handleSubmit","preventDefault","addTodo","this","className","onSubmit","FormControl","onChange","Component","CounterButton","count","Button","variant","onClick","MultiSelect","commaSeparated","multiLine","multiSelect","handleCommaSeparatedChange","allVal","split","map","item","trim","filter","Boolean","join","availableOption","includes","handleMultiLineChange","handleMultipleChange","Array","from","selectedOptions","console","log","Form","Label","Control","as","rows","multiple","option","key","StopWatch","timer","running","handleRunClick","handleClearClick","Todo","todo","deleteTodo","todoList","length","ListGroup","Item","id","filterIphones","iphones","searchterm","iphone","color","toLowerCase","capacity","name","price","parseInt","filterIphone","ResultFound","ResultNotFound","Search","doSearch","fetch","then","response","json","parsedJson","Data","isSearching","placeholder","React","MonsterCard","monsters","Card","Img","src","Body","Title","Text","email","MonsterSearch","useState","setMonsters","setValue","useEffect","filterMonsters","monster","App","todoFilter","todos","Math","random","addTodos","incrementValue","clearInterval","lapse","startTime","Date","now","setInterval","Container","connect","dispatch","CommonAction","data","location","hostname","match","ReactDOM","render","store","document","getElementById","navigator","serviceWorker","registration","unregister"],"mappings":"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","file":"static/js/main.0102bd55.chunk.js","sourcesContent":["import { createStore, compose } from 'redux';\r\nimport commonReducer from './commonReducer';\r\n\r\nlet initialState = {};\r\n\r\nexport default createStore(commonReducer, initialState,\r\n    compose(window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\r\n    );","export default function commonReducer(state = {}, action) {\r\n    switch (action.type) {\r\n        case \"INITIAL_STATE\":\r\n            return {\r\n                ...state,\r\n                ready: action.payload\r\n            };\r\n        default:\r\n            return state\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { FormControl } from 'react-bootstrap';\r\n\r\nclass AddTodo extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            content: '',\r\n        }\r\n    }\r\n\r\n\r\n    handleChange = (e) => {\r\n        this.props.incrementCount(1);\r\n        this.setState({\r\n            content: e.target.value,\r\n        });\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.addTodo(this.state)\r\n        this.setState({\r\n            content: ''\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { content } = this.state;\r\n        return (\r\n            <div className=\"mb-3\">\r\n                <form onSubmit= {this.handleSubmit} >\r\n                    <label>Add new todo:</label>\r\n                    <FormControl onChange= {this.handleChange} value={content}  />\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AddTodo;","import React  from 'react';\r\nimport { Button } from 'react-bootstrap';\r\n\r\nconst CounterButton = ({incrementCount, count}) => {\r\n    const handleButtonClick = () => {\r\n        incrementCount(5);\r\n    }\r\n\r\n    return (\r\n        <Button variant=\"outline-info\"\r\n            onClick={handleButtonClick}\r\n        >\r\n            Counter {count}\r\n        </Button>\r\n    );\r\n}\r\n\r\nexport default CounterButton;","import React, { Component } from 'react';\r\nimport { Form } from 'react-bootstrap';\r\n\r\nclass MultiSelect extends Component {\r\n    static availableOption = [\r\n        'apple',\r\n        'banana',\r\n        'grapes',\r\n        'orange'\r\n    ];\r\n\r\n    state = {\r\n        commaSeparated: '',\r\n        multiLine: '',\r\n        multiSelect: []\r\n    }\r\n\r\n    handleCommaSeparatedChange = (e) => {\r\n        const { value } = e.target;\r\n        const allVal = value\r\n            .split(',')\r\n            .map(item => item.trim())\r\n            .filter(Boolean)\r\n\r\n        this.setState({\r\n            commaSeparated : value,\r\n            multiLine: allVal.join('\\n'),\r\n            multiSelect: allVal.filter(item => MultiSelect.availableOption.includes(item))\r\n        });\r\n    }\r\n\r\n    handleMultiLineChange = (e) => {\r\n        const { value } = e.target;\r\n        const allVal = value\r\n            .split('\\n')\r\n            .map(item => item.trim())\r\n            .filter(Boolean)\r\n\r\n        this.setState({\r\n            multiLine: value,\r\n            commaSeparated: allVal.join(','),\r\n            multiSelect: allVal.filter(item => MultiSelect.availableOption.includes(item))\r\n        });\r\n    }\r\n\r\n    handleMultipleChange = (e) => {\r\n        const allVal = Array.from(e.target.selectedOptions).map(item => item.value);\r\n        console.log(allVal)\r\n\r\n        this.setState({\r\n            multiSelect: allVal,\r\n            multiLine : allVal.join('\\n'),\r\n            commaSeparated: allVal.join(',')\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { commaSeparated, multiLine, multiSelect } = this.state;\r\n        return (\r\n            <Form>\r\n                <Form.Label>Comma Separated Values</Form.Label>\r\n                <Form.Control\r\n                    type=\"text\"\r\n                    onChange={this.handleCommaSeparatedChange}\r\n                    value={commaSeparated}\r\n                />\r\n\r\n                <Form.Label className=\"mt-3\">Multi Line Values</Form.Label>\r\n                <Form.Control\r\n                    as=\"textarea\"\r\n                    rows=\"3\"\r\n                    onChange={this.handleMultiLineChange}\r\n                    value={multiLine}\r\n                />\r\n\r\n                <Form.Label className=\"mt-3\">Multi Select Values</Form.Label>\r\n                <Form.Control\r\n                    as=\"select\" multiple\r\n                    onChange={this.handleMultipleChange}\r\n                    value={multiSelect}\r\n                >\r\n                    {MultiSelect.availableOption.map(option => {\r\n                        return <option key={option}> {option} </option>\r\n                    })}\r\n                </Form.Control>\r\n            </Form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MultiSelect;","import React from 'react';\r\nimport { Button } from 'react-bootstrap';\r\n\r\nconst StopWatch = ({timer, running, handleRunClick, handleClearClick}) => {\r\n    return (\r\n        <div className=\"my-3\">\r\n            <h4>{timer}ms</h4>\r\n            <Button className=\"mx-3\" variant=\"primary\" onClick={handleRunClick} >{running ? 'Stop': 'Start'}</Button>\r\n            <Button className=\"mx-3\" variant=\"success\" onClick={handleClearClick}>Clear</Button>\r\n        </div>\r\n    );}\r\n\r\nexport default StopWatch;","import React from 'react';\r\nimport { ListGroup } from 'react-bootstrap';\r\n\r\nconst Todo = ({todo, deleteTodo}) => {\r\n    const todoList = todo.length ? (\r\n        todo.map(todo => {\r\n            return (\r\n                <ListGroup.Item\r\n                    key={todo.id}\r\n                    onClick={() => {deleteTodo(todo.id)}}\r\n                    >\r\n                    {todo.content}\r\n                </ListGroup.Item>\r\n            )\r\n        })\r\n    ) : (\r\n        <ListGroup.Item className=\"center\">You have no todo's left</ListGroup.Item>\r\n    );\r\n\r\n    return (\r\n        <div className=\"todo-list mb-3\">\r\n            <h1> Todo List</h1>\r\n            <ListGroup>\r\n                {todoList}\r\n            </ListGroup>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Todo;","export const getIphones = (searchterm) => {\n  // use the fetch API to load iphones.json to iphones variable\nreturn  fetch('/iphones.json')\n          .then(response =>  response.json())\n          .then(parsedJson => {\n            const iphones = parsedJson;\n            return filterIphones(iphones, searchterm);\n          });\n};\n\nexport const filterIphones = (iphones, searchterm) => {\n  return iphones.filter(iphone => {\n    return filterIphone(iphone, searchterm);\n  });\n};\n\nfunction filterIphone(iphones, searchterm) {\n  if(iphones.color.toLowerCase().includes(searchterm.toLowerCase())) {\n    return iphones;\n  } else if(iphones.capacity.toLowerCase().includes(searchterm.toLowerCase())) {\n    return iphones;\n  } else if(iphones.name.toLowerCase().includes(searchterm.toLowerCase())) {\n    return iphones;\n  } else if(iphones.price === parseInt(searchterm)) {\n    return iphones;\n  }  else {\n    return false;\n  }\n}","import React from 'react';\r\nimport { ListGroup } from 'react-bootstrap';\r\n\r\nconst ResultFound = ({iphones}) => {\r\n    return (\r\n        <div className=\"mb-3\">\r\n            {\r\n                iphones.map(item => {\r\n                    return (\r\n                        <ListGroup.Item key={item.id}>\r\n                            <span>Name: {item.name}, </span>\r\n                            <span>Color: {item.color}, </span>\r\n                            <span>Capacity: {item.capacity}, </span>\r\n                            <span>Price: {item.price}</span>\r\n                        </ListGroup.Item>\r\n                    )\r\n                })\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ResultFound;","import React from 'react';\r\nimport { ListGroup } from 'react-bootstrap';\r\n\r\nconst ResultNotFound = () => {\r\n    return (\r\n        <div className=\"mb-3\">\r\n            <ListGroup.Item>\r\n                Sorry result not found. Try again.\r\n            </ListGroup.Item>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ResultNotFound;","import React from 'react';\r\nimport * as Data from '../../util/index';\r\nimport { Button, FormControl } from 'react-bootstrap';\r\n\r\nimport ResultFound from './resultFound';\r\nimport ResultNotFound from './resultNotFound';\r\n\r\nclass Search extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      iphones: [],\r\n      searchterm: '',\r\n      isSearching: false\r\n    };\r\n  }\r\n\r\n  doSearch = () => {\r\n    var { searchterm } = this.state;\r\n    const iphone =  Data.getIphones(searchterm)\r\n    iphone.then(response =>  this.setState({\r\n      iphones: response,\r\n      isSearching: true\r\n     }));\r\n  }\r\n\r\n  onChange = (e) => {\r\n    this.setState({\r\n        searchterm : e.target.value\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { iphones, searchterm, isSearching } = this.state\r\n    return (\r\n      <div>\r\n        <div className=\"mt-3\">\r\n          <h2> Search Iphone </h2>\r\n          <FormControl placeholder=\"Search\" onChange={this.onChange} searchterm={searchterm} />\r\n          <Button className=\"my-3\" variant=\"primary\" onClick={this.doSearch}> Search </Button>\r\n        </div>\r\n        {isSearching ? (iphones.length\r\n        ? (\r\n          <div className=\"result-found\">\r\n            <ResultFound iphones={iphones}/>\r\n          </div>\r\n        )\r\n        : <div className=\"result-not-found\">\r\n            <ResultNotFound />\r\n          </div>\r\n        )\r\n        : <span>Loading...</span>\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Search;\r\n","import React from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\n\r\nimport \"./cards.scss\";\r\nconst MonsterCard = ({ monsters }) => {\r\n  return (\r\n    <div className=\"container monster-card\">\r\n      {monsters.map(item => {\r\n        return (\r\n          <Card className=\"col-4\" key={item.id}>\r\n            <Card.Img\r\n              variant=\"top\"\r\n              src={`https://robohash.org/${item.id}?set=set2`}\r\n            />\r\n            <Card.Body>\r\n              <Card.Title>{item.name}</Card.Title>\r\n              <Card.Text>{item.email}</Card.Text>\r\n            </Card.Body>\r\n          </Card>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MonsterCard;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { FormControl } from \"react-bootstrap\";\r\n\r\nimport MonsterCard from \"./monsterCard\";\r\n\r\nimport \"./search.scss\";\r\n\r\nconst MonsterSearch = ({ placeholder }) => {\r\n  const [monsters, setMonsters] = useState([]);\r\n  const [value, setValue] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    fetch(`https://jsonplaceholder.typicode.com/users`)\r\n      .then(response => response.json())\r\n      .then(response => setMonsters(response));\r\n  }, []);\r\n\r\n  const handleChange = e => {\r\n    setValue(e.target.value);\r\n  };\r\n\r\n  const filterMonsters = monsters.filter(monster =>\r\n    monster.name.toLowerCase().includes(value.toLowerCase())\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <FormControl\r\n        className=\"monster-search\"\r\n        placeholder={placeholder}\r\n        value={value}\r\n        onChange={handleChange}\r\n      />\r\n      <MonsterCard monsters={filterMonsters} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MonsterSearch;\r\n","import React, { Component } from \"react\";\nimport { Container } from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport { CommonAction } from \"./redux/action\";\n\nimport AddTodo from \"./components/Todo/addTodo\";\nimport CounterButton from \"./components/CounterButton/counterButton\";\nimport MultiSelect from \"./components/Multiselect/multiSelect\";\nimport StopWatch from \"./components/StopWatch/stopWatch\";\nimport Todo from \"./components/Todo/todo\";\nimport Search from \"./components/IphoneSearch/search\";\nimport MonsterSearch from \"./components/MonsterCard/monsterSearch\";\n\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      todos: [\n        { id: 1, content: \"buy some milk\" },\n        { id: 2, content: \"play mario Kart\" }\n      ],\n      count: 0,\n      timer: 0,\n      running: false\n    };\n  }\n\n  deleteTodo = id => {\n    const todoFilter = this.state.todos.filter(todo => {\n      return todo.id !== id;\n    });\n    this.setState({\n      todos: todoFilter\n    });\n  };\n\n  addTodo = todo => {\n    todo.id = Math.random();\n    let addTodos = [...this.state.todos, todo];\n\n    this.setState({\n      todos: addTodos\n    });\n  };\n\n  incrementCount = incrementValue => {\n    this.setState({\n      count: this.state.count + incrementValue\n    });\n  };\n\n  handleRunClick = () => {\n    this.setState(state => {\n      if (state.running) {\n        clearInterval(this.lapse);\n      } else {\n        const startTime = Date.now() - this.state.timer;\n        this.lapse = setInterval(() => {\n          this.setState({\n            timer: Date.now() - startTime\n          });\n        });\n      }\n      return { running: !state.running };\n    });\n  };\n\n  handleClearClick = () => {\n    clearInterval(this.lapse);\n\n    this.setState({\n      timer: 0,\n      running: false,\n      count: 0\n    });\n  };\n\n  componentWillUnmount() {\n    clearInterval(this.lapse);\n  }\n\n  render() {\n    const { todos, count, timer, running } = this.state;\n\n    return (\n      <Container className=\"App\">\n        <div className=\"todo-container\">\n          <Todo todo={todos} deleteTodo={this.deleteTodo} />\n          <AddTodo\n            incrementCount={this.incrementCount}\n            addTodo={this.addTodo}\n          />\n        </div>\n\n        <div className=\"counter-container\">\n          <CounterButton\n            incrementCount={this.incrementCount}\n            count={count}\n            handleClearClick={this.handleClearClick}\n          />\n\n          <StopWatch\n            timer={timer}\n            running={running}\n            handleRunClick={this.handleRunClick}\n            handleClearClick={this.handleClearClick}\n          />\n        </div>\n\n        <MultiSelect />\n        <Search />\n\n        <div className=\"my-4 monster-container\">\n          <h1 className=\"monster-title text-center\">Monster Rolodex</h1>\n          <MonsterSearch placeholder={\"Search monsters via name\"} />\n        </div>\n      </Container>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  state: state\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    CommonAction: data => dispatch(CommonAction(data))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","export function CommonAction(data) {\r\n    return { type: 'INITIAL_STATE', payload: data }\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n<Provider store={store}>\n<App />\n</Provider>,\ndocument.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}